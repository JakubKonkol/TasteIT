spring.application.name=TasteITServer
spring.data.mongodb.database=tasteit_db
spring.data.mongodb.auto-index-creation=true
#server.address=192.168.1.108

# Kafka !!! Wazne, jesli spring tez bedzie w dockerze to trzeba zmienic port kafki na 9092 !!!
spring.kafka.bootstrap-servers=localhost:29092
#spring.kafka.consumer.group-id=tasteit-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Kafka Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Consumer Configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

#Async Config
app.async.post-fetching.thread-pool-size=3
app.async.preference-update.thread-pool-size=4

# Clustering configuration
app.clustering.schedule=0 0 1 * * *
app.clustering.legacy-cutoff-days=30
app.clustering.min-usage-count=5